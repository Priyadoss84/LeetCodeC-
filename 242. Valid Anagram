//Naive Method: Sorting
T(n) = O(n log n)

class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size())
            return false;
        sort(s.begin(),s.end());
        sort(t.begin(),t.end());
        for(int i=0;i<s.size();i++)
        {
            if(s[i]!=t[i])
                return false;
        }
        return true;
    }
};


//Method 2 : counting
T(n) = O(n)

class Solution {
public:
    bool isAnagram(string s, string t) {      
        if(s.size()!=t.size())
            return false;
        int count[256]={0};
        for(int i=0;i<s.size();i++)
            count[s[i]]++;
        for(int i=0;i<t.size();i++)
            count[t[i]]--;
        for(int i=0;i<256;i++)
        {
            if(count[i]!=0)
                return false;
        }
        return true;
    }
};
