T(n) = O(n^2)

class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {
        vector<int> v;
        int n=mat.size();
        int m=mat[0].size();
        if(n*m != r*c)
            return mat;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                v.push_back(mat[i][j]);
            }
        }
        int k=0;
        
        vector<vector<int>> mat2(r,vector<int>(c));
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                mat2[i][j]=v[k];
                k++;
            }
        }
        return mat2;
    }
};





//Optimized solution
T(n) = O(n)

class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {
         int n=mat.size();
        int m=mat[0].size();
        if(n*m != r*c)
            return mat;
        vector<vector<int>> mat2(r,vector<int>(c));
        for(int i=0;i<r*c;i++)
        {
            mat2[i/c][i%c]=mat[i/m][i%m];
        }
        return mat2;
    }
};
