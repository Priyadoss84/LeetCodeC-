Naive Solution :
T(n) = O(n)
S(n) = O(n)

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * }*/
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head==NULL)
            return head;
        queue<int> q;
        ListNode* h=head;
        while(h!=NULL)
        {
            int x=h->val;
            if(x!=val)
                q.push(x);
            h=h->next;
        }
        ListNode* h1=head;
        int n=q.size();
        ListNode* h2;
        if(n==0)
        {
            head=NULL;
            return head;
        }
        
        while(!q.empty())
        {
            int y=q.front();
            h1->val=y;
            q.pop();
            h2=h1;
            h1=h1->next;
        }
        h2->next=NULL;
        return head;
    }
};
